using System.Runtime.CompilerServices;
using Windows.Win32.System.Com;
using Windows.Win32.System.Com.StructuredStorage;
using Windows.Win32.System.Variant;
using Windows.Win32.Foundation;
using System.Runtime.InteropServices.ComTypes;
using IStream = Windows.Win32.System.Com.IStream;
// using winmdroot = global::Windows.Win32;

namespace Profile;

internal struct PropVariant
{
    private PROPVARIANT _var;
    internal ref VARENUM vt => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.vt);
    internal ref DECIMAL decVal => ref Unsafe.AsRef(ref _var.Anonymous.decVal);
    internal ref CHAR cVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cVal);
    internal ref byte bVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.bVal);
    internal ref short iVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.iVal);
    internal ref ushort uiVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.uiVal);
    internal ref int lVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.lVal);
    internal ref uint ulVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.ulVal);
    internal ref int intVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.intVal);
    internal ref uint uintVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.uintVal);
    internal ref long hVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.hVal);
    internal ref ulong uhVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.uhVal);
    internal ref float fltVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.fltVal);
    internal ref double dblVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.dblVal);
    internal ref VARIANT_BOOL boolVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.boolVal);
    internal ref int scode => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.scode);
    internal ref CY cyVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cyVal);
    internal ref double date => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.date);
    internal ref FILETIME filetime => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.filetime);
    internal unsafe ref global::System.Guid* puuid => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.puuid);
    internal unsafe ref CLIPDATA* pclipdata => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pclipdata);
    internal ref BSTR bstrVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.bstrVal);
    internal ref BSTRBLOB bstrblobVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.bstrblobVal);
    internal ref BLOB blob => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.blob);
    internal ref PSTR pszVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.pszVal);
    internal ref PWSTR pwszVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.pwszVal);
    internal unsafe ref IUnknown* punkVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.punkVal);
    internal unsafe ref IDispatch* pdispVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pdispVal);
    internal unsafe ref IStream* pStream => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pStream);
    internal unsafe ref IStorage* pStorage => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pStorage);
    internal unsafe ref VERSIONEDSTREAM* pVersionedStream => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pVersionedStream);
    internal unsafe ref SAFEARRAY* parray => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.parray);
    internal ref CAC cac => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cac);
    internal ref CAUB caub => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.caub);
    internal ref CAI cai => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cai);
    internal ref CAUI caui => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.caui);
    internal ref CAL cal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cal);
    internal ref CAUL caul => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.caul);
    internal ref CAH cah => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cah);
    internal ref CAUH cauh => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cauh);
    internal ref CAFLT caflt => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.caflt);
    internal ref CADBL cadbl => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cadbl);
    internal ref CABOOL cabool => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cabool);
    internal ref CASCODE cascode => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cascode);
    internal ref CACY cacy => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cacy);
    internal ref CADATE cadate => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cadate);
    internal ref CAFILETIME cafiletime => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cafiletime);
    internal ref CACLSID cauuid => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cauuid);
    internal ref CACLIPDATA caclipdata => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.caclipdata);
    internal ref CABSTR cabstr => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cabstr);
    internal ref CABSTRBLOB cabstrblob => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.cabstrblob);
    internal ref CALPSTR calpstr => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.calpstr);
    internal ref CALPWSTR calpwstr => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.calpwstr);
    internal ref CAPROPVARIANT capropvar => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.capropvar);
    internal ref PSTR pcVal => ref Unsafe.AsRef(ref _var.Anonymous.Anonymous.Anonymous.pcVal);
    internal unsafe ref byte* pbVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pbVal);
    internal unsafe ref short* piVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.piVal);
    internal unsafe ref ushort* puiVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.puiVal);
    internal unsafe ref int* plVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.plVal);
    internal unsafe ref uint* pulVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pulVal);
    internal unsafe ref int* pintVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pintVal);
    internal unsafe ref uint* puintVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.puintVal);
    internal unsafe ref float* pfltVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pfltVal);
    internal unsafe ref double* pdblVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pdblVal);
    internal unsafe ref VARIANT_BOOL* pboolVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pboolVal);
    internal unsafe ref DECIMAL* pdecVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pdecVal);
    internal unsafe ref int* pscode => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pscode);
    internal unsafe ref CY* pcyVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pcyVal);
    internal unsafe ref double* pdate => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pdate);
    internal unsafe ref BSTR* pbstrVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pbstrVal);
    internal unsafe ref IUnknown** ppunkVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.ppunkVal);
    internal unsafe ref IDispatch** ppdispVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.ppdispVal);
    internal unsafe ref SAFEARRAY** pparray => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pparray);
    internal unsafe ref PROPVARIANT* pvarVal => ref To.Ref(ref _var.Anonymous.Anonymous.Anonymous.pvarVal);
}