// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "alt+n",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "editorTextFocus && !suggestWidgetVisible && textCompareEditorActive",
    },
    {
        "key": "alt+shift+n",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "editorTextFocus && !suggestWidgetVisible && textCompareEditorActive",
    },
    {
        "key": "alt+n",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus && !suggestWidgetVisible && !textCompareEditorActive",
    },
    {
        "key": "alt+shift+n",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus && !suggestWidgetVisible && !textCompareEditorActive",
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertSnippet",
        "args": {
            "snippet": "ðŸ”¸ `${1:XX}:` $2",
            "langId": "markdown",
            "name": "Dialog",
        },
        "when": "editorTextFocus && editorLangId == 'markdown' && vim.mode == 'Insert'"
    },
    {
        "command": "workbench.action.findInFiles",
        "args": {
            "onlyOpenEditors": true,
            "triggerSearch": true,
        },
        "key": "ctrl+0"
    },
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j",
    },
    {
        "command": "problems.action.openToSide",
        "key": "F1",
    },
    {
        "key": "ctrl+shift+r",
        "command": "PowerShell.RestartSession",
        "when": "editorTextFocus && editorLangId == 'powershell'"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "extension.align",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+shift+s",
        "command": "PowerShell.InvokeRegisteredEditorCommand",
        "args": { "commandName": "ConvertTo-SplatExpression" },
        "when": "editorLangId == 'powershell'"
    },
    {
        "key": "alt+shift+n",
        "command": "PowerShell.InvokeRegisteredEditorCommand",
        "args": { "commandName": "Resolve-TypeExpression" },
        "when": "editorLangId == 'powershell'"
    },
    {
        "key": "alt+shift+m",
        "command": "PowerShell.InvokeRegisteredEditorCommand",
        "args": { "commandName": "Expand-MemberExpression" },
        "when": "editorLangId == 'powershell'"
    },
    {
        "key": "alt+shift+f",
        "command": "workbench.files.action.focusFilesExplorer"
    },
    {
        "key": "r",
        "command": "workbench.files.action.refreshFilesExplorer",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "d",
        "command": "moveFileToTrash",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus && !inQuickOpen"
    },
    {
        "key": "alt+n",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+n",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "alt+p",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "alt+n",
        "command": "showNextParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+p",
        "command": "showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
    },
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
    },
    {
        "key": "ctrl+v",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u2714" },
        "when": "terminalFocus"
    },
    {
        "key": "shift+enter",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u2665" },
        "when": "terminalFocus",
    },
    {
        "key": "ctrl+shift+.",
        "command": "editor.action.quickFix",
    },
    { "key": "ctrl+r l",              "command": "-npm-script.showOutput" },
    { "key": "ctrl+r t",              "command": "-dotnet.test.runTestsInContext" },
    { "key": "ctrl+r shift+r",        "command": "-npm-script.run" },
    { "key": "ctrl+r ctrl+t",         "command": "-dotnet.test.debugTestsInContext" },
    { "key": "ctrl+r r",              "command": "-npm-script.rerun-last-script" },
    { "key": "ctrl+r shift+x",        "command": "-npm-script.terminate-script" },
    { "key": "ctrl+r t",              "command": "-npm-script.test" },
    { "key": "ctrl+`",          "command": "workbench.action.focusActiveEditorGroup",
                                    "when": "!editorFocus" },
    { "key": "ctrl+`",          "command": "workbench.action.terminal.focus",
                                    "when": "!terminalFocus" },
    { "key": "ctrl+shift+r",    "command": "PowerShell.RestartSession",
                                    "when": "editorLangId == 'powershell'" },
    { "key": "ctrl+shift+q",    "command": "workbench.action.toggleMaximizedPanel" },
    { "key": "ctrl+shift+c",    "command": "PowerShell.ShowAdditionalCommands",
                                    "when": "editorLangId == 'powershell'" },
    { "key": "ctrl+shift+a",    "command": "extension.align",
                                    "when": "editorTextFocus" },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.reloadWindow"
    },
    {
        "key": "ctrl+shift+j",
        "command": "PowerShell.InvokeRegisteredEditorCommand",
        "args": [{ "commandName": "FixAllPSSA" }],
        "when": "editorLangId == 'powershell'"
    },
    {
        "key": "shift+alt+s",
        "command": "PowerShell.InvokeRegisteredEditorCommand",
        "args": { "commandName": "ConvertTo-SplatExpression" },
        "when": "editorLangId == 'powershell'"
    },
    {
        "key": "alt+n",
        "command": "showNextParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
    },
    {
        "key": "alt+p",
        "command": "showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
    },
    {
        "key": "shift+enter",
        "command": "terminalInput.sendCustomInput",
        "args": [ "heartEmojiWithAlt" ],
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+.",
        "command": "keyboard-quickfix.openQuickFix",
    },
]
